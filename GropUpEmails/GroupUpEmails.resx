<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msData="urn:schemas-microsoft-com:xml-msData">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msData:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metaData">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="Data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msData:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msData:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msData:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msData:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msData:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msData:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metaData name="openFileDialogRecievers.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>198, 17</value>
  </metaData>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <Data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEACACoCAAAFgAAACgAAAAgAAAAQAAAAAEACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB9AAAAAAAAAIIAAAiCCAAAjgAAAJIAAAiO
        CAAQihAAAJ4AAAieCAAVkBUAFJoUAAWiBQAAsAAAEKIQABieGAAIrwgAEK8QABugGwAYrhgALZAtACme
        KQAerh4AKbApAAC/AAAIwAgAEMMQAADZAAAYvhgAIcEhABDWEAAc0BwAAJKUAAAAAAAIkpQAAAAAAACe
        nAAAAAAACJ6cAAAAAAAQnpwAGJ6cABCipQAYoqUAIaKlAAAAAAApoqUAAAAAADWYNQA5njkAMbIxAAAA
        AABSolIAUq5SAGOuYwAAAAAALdEtACHfIQAh3zkAAAAAAErPSgBS01IAQt9KAAAAAAA5oqUALK6tADOv
        rwA5srUAQq6tAEawsQBOsrUASr69AG2ybQBuwm4Ae8B7AIS/hABgsrUAUr69AF++vQBrz6UAiMOPAAAA
        AABvvrkAnMOcAGzAwgBwx8gAe8PGAH3HyACcz60Apc+lAIzKxgCM37UAf87OAInQ0ACUz84AkdPVAK3T
        rQC107UAnM/OAKDT1gC52bkAvd+9AKbX2ACx4dYAvdPWALnf3gDK4dQAAAAAAMrj5wDS6dIA1u/WAM7v
        7wDW7+8A1vP3AN7v7wDn7+cA7/HvAOfz9wDv8/cA9/P3AP///wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA+Pj4+Pj4+Pj4+Pj4+Pj46uT0+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+NOAh4Pz+Pj4
        +Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+PjkipSWh7bt+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+PjzsYKGlJeP
        goLL+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj46rGCioiVjZmIgILL9/j4+Pj4+Pj4+Pj4+Pj49O74+PiGgImI
        iJaNnoiAiIDZ+Pj47fj4+Pj4+Pj4+OGCgIrTyYCGiY2GnpualoaGh7XLyICAsPT4+Pj4+Pj4lICAlYCJ
        hJGOhZGTm4KZjoaUjYCAj4CA0Pj4+Pj4+PSAkoCNio6QjIaLnpSQkZCOjoCQl5KCjoDI+Pj4+Pj0ioqD
        kYCRkJyEjpGFn5udi4qRi42JloCOhIDQ+Pj4+OCAg4yLiZaRhpCRhriLmYWQjoOdkIiIjYqRgJT4+Pj4
        yIqIhJiauYiGn4uXhZ6bn4eOjY2Nlp+dk4CNgPP4+PiUgIaTiIqMmomTlpOYkpiLk5GCiJecioqRjIKA
        5fj4+NnKybSKkI2YmpiAnrK+uryRnIeYmZiNjrDIybT0+Pj43aCgxNba2Mq9nZmf3aCgxsm5mbjKy9Da
        zaygx/j4+PKgoKCgoKCgq8TSz+egoKCg49vUzsKkoKCgoKCg4/j48KCgoKCgoKCgrMbe6KCgoKDd3car
        oKCgoKCgoKDd+Pj4zqCgqcbV1t3WwqjjzqCgruqowtbW1dzMq6CgrvX4+Pj47NbOrqCgoKDF3MDm5uPn
        wdbGoKCgoK7M1eP4+Pj4+PGmoKCgoKCo3cOg36TX3qLdoMHiq6CgoKCgpvD4+Pj446CgoKCgweKmoMbG
        ps7UrMHOoKbfwqCgoKCg3/j4+PjwoKCgrtrMoKCo1qDGwa7NoNKroKDG18GgoKDs+Pj4+PjsxtXVoKCg
        oOOmoN2goN+gpuagoKCg1NfG6fj4+Pj4+Pj43qCgoKDGw6Cg36Cg4qCgwc6goKCg3fj4+Pj4+Pj4+PjO
        oKCgqtygoKDdoKDcqKCg1q6goKDE+Pj4+Pj4+Pj4+N+goKDeoKCgw8agoMPFoKCg4qCgoN74+Pj4+Pj4
        +Pj4+N7M5s6goKDOrKCgqNygoKDG6c7c+Pj4+Pj4+Pj4+Pj4+Pj4zKCgoNegoKCg3aCgoMb4+Pj4+Pj4
        +Pj4+Pj4+Pj4+PjsqaDF9KCgoKDvxaCp7Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj49/j436Cg3vj49fj4+Pj4
        +Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj49vf4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4
        +Pj4+Pj4+Pj4+AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA
</value>
  </Data>
</root>